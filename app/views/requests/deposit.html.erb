<h3>Hey, <%= @request.booking.guest_name %>!</h3>
<hr>
<h5>Please clear your deposit:</h5>
<div class="alert alert-info my-3">
  The deposit is a pre-authorised payment and the amount is held on your account and not withdrawn by us. This is later released subject to compliance with our terms.
</div>


<form id="payment-form">
  <div id="payment-element">
    <!-- Stripe will inject the Payment Element here -->
  </div>
  
  <div class="row">
    <div class="d-flex justify-content-between" style='position: fixed;bottom: 0;left: 0;width: 100%;background: white;'>
    <button id="btn-back" onclick="back()" type="button" class="btn btn-lg btn-light my-3"><i class="bi bi-chevron-left"></i> Back</button>
    <button id="submit" class="btn btn-lg btn-primary my-3">Pay Deposit</button>
  </div>
</div>
  <p id="error-message" class="text-danger"></p>
</form>

<script src="https://js.stripe.com/v3/"></script>
<script>
  const stripe = Stripe('<%= Rails.application.credentials.dig(:stripe, :test, :publishable_key) %>');

  function back(){
    window.location.href = window.location.href.split("&")[0] + "&step=4" 
  }


  setInterval(() => {
    document.querySelector("iframe").style.height="750px"
  }, 1000);

  // Fetch the PaymentIntent client secret from the backend
  fetch('/deposits/create-intent', {
    method: 'POST',
    headers: {
    'Content-Type': 'application/json',
    'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify({ amount: <%= @deposit_amount %>, booking_id: <%= @request.booking.id || 0 %> })  // Example amount
  })
  .then(response => response.json())
  .then(data => {
    const clientSecret = data.client_secret;

    // Customize the appearance of the Payment Element
    const appearance = {
      theme: 'stripe',
    };

    // Create the Stripe Elements group with the clientSecret
    const elements = stripe.elements({ clientSecret, appearance });

    // Create and mount the Payment Element
    const paymentElement = elements.create('payment');
    paymentElement.mount('#payment-element');    

    // Handle the form submission
    const form = document.getElementById('payment-form');
    form.addEventListener('submit', async (event) => {
      event.preventDefault();

      // Confirm the payment with Stripe
      const result = await stripe.confirmPayment({
        elements,
        redirect: 'if_required',
        confirmParams: {
          return_url: window.location.href.split("?")[0] + "/pay-deposit-remotely"
        }
      });

      if (result.error) {
        // Show error message to the user
        document.getElementById('error-message').textContent = result.error.message;
      } else {

        fetch("/requests/<%= @request.id %>/pay-deposit", {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({
            paymentId: result?.paymentIntent?.id
          })
        })
        .then(response => response.json())
        .then(data => {
          window.location.reload();
        })

      }
    });
  })
  .catch(error => {
    console.error('Error fetching the client secret:', error);
  });
  
</script>